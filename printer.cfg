# GD32F303RET6 OSC:8MHz(STM32F103) 28KiB bootloader
# STEP DRIVER MS35774(clon tmc2209?) 1/16 STEP
# HEIGHT HX711

[include mainsail.cfg]
#[include gcode_macro.cfg]

[virtual_sdcard]
path: /home/usr1/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

[mcu]
serial: /dev/ttyS1
#baud: 500000
restart_method: command

[printer]
kinematics: cartesian
max_velocity: 250
max_accel: 2500
max_accel_to_decel: 2500
max_z_velocity: 50
max_z_accel: 500
square_corner_velocity: 5.0

[input_shaper]
shaper_type_x: mzv
shaper_freq_x: 42.5
damping_ratio_x: 0.2
shaper_type_y: mzv
shaper_freq_y: 41.0
damping_ratio_y: 0.2

#[force_move]
#enable_force_move: true

#[idle_timeout]
#timeout: 99999999

#[hx711s]
#count: 1
#use_mcu: leveling_mcu
#sensor0_clk_pin: PA4
#sensor0_sdo_pin: PC6

[stepper_x]
step_pin: PC2
dir_pin: !PB9
enable_pin: !PC3
microsteps: 64
rotation_distance: 40
endstop_pin: !PA5
#endstop_pin: tmc2209_stepper_x:virtual_endstop
position_endstop: -8
position_max: 225
position_min: -9
homing_speed: 40
homing_retract_dist:0 #10

[tmc2209 stepper_x]
uart_pin: PB12
run_current: 0.55
sense_resistor: 0.150
stealthchop_threshold: 0
#driver_SGTHRS: 94#88
#tx_pin:
#select_pins:
#   The micro-controller pin attached to the DIAG line of the TMC2209
#   chip. The pin is normally prefaced with "^" to enable a pullup.
#   Setting this creates a "tmc2209_stepper_x:virtual_endstop" virtual
#   pin which may be used as the stepper's endstop_pin. Doing this
#   enables "sensorless homing". (Be sure to also set driver_SGTHRS to
#   an appropriate sensitivity value.) The default is to not enable
#   sensorless homing.
#diag_pin: ^PB10
#   If true, enable step interpolation (the driver will internally
#   step at a rate of 256 micro-steps). This interpolation does
#   introduce a small systemic positional deviation - see
#   TMC_Drivers.md for details. The default is True.
interpolate: false
#   The amount of current (in amps RMS) to configure the driver to use
#   when the stepper is not moving. Setting a hold_current is not
#   recommended (see TMC_Drivers.md for details). The default is to
#   not reduce the current.
#hold_current: 0.5
#   The address of the TMC2209 chip for UART messages (an integer
#   between 0 and 3). This is typically used when multiple TMC2209
#   chips are connected to the same UART pin. The default is zero.
#uart_address: 3
#   Set the given register during the configuration of the TMC2209
#   chip. This may be used to set custom motor parameters. The
#   defaults for each parameter are next to the parameter name in the
#   above list.
#driver_MULTISTEP_FILT: true
#driver_IHOLDDELAY: 8
#driver_TPOWERDOWN: 20
#driver_TBL: 2
#driver_TOFF: 3
#driver_HEND: 0
#driver_HSTRT: 5
#driver_PWM_AUTOGRAD: true
#driver_PWM_AUTOSCALE: true
#driver_PWM_LIM: 12
#driver_PWM_REG: 8
#driver_PWM_FREQ: 1
#driver_PWM_GRAD: 14
#driver_PWM_OFS: 36

[stepper_y]
step_pin: PB8
dir_pin: PB7
enable_pin: !PC3
microsteps: 64
rotation_distance: 40
endstop_pin: !PA6
#endstop_pin: tmc2209_stepper_y:virtual_endstop
position_endstop: -15
position_max: 225
position_min: -16
homing_speed: 40
homing_retract_dist:0

[tmc2209 stepper_y]
uart_pin: PB13
run_current: 0.55
sense_resistor: 0.150
stealthchop_threshold: 0
#driver_SGTHRS: 81
#tx_pin:
#select_pins:
#   The micro-controller pin attached to the DIAG line of the TMC2209
#   chip. The pin is normally prefaced with "^" to enable a pullup.
#   Setting this creates a "tmc2209_stepper_x:virtual_endstop" virtual
#   pin which may be used as the stepper's endstop_pin. Doing this
#   enables "sensorless homing". (Be sure to also set driver_SGTHRS to
#   an appropriate sensitivity value.) The default is to not enable
#   sensorless homing.
#diag_pin: ^PB11
#   If true, enable step interpolation (the driver will internally
#   step at a rate of 256 micro-steps). This interpolation does
#   introduce a small systemic positional deviation - see
#   TMC_Drivers.md for details. The default is True.
interpolate: false
#   The amount of current (in amps RMS) to configure the driver to use
#   when the stepper is not moving. Setting a hold_current is not
#   recommended (see TMC_Drivers.md for details). The default is to
#   not reduce the current.
#hold_current: 0.5
#   The address of the TMC2209 chip for UART messages (an integer
#   between 0 and 3). This is typically used when multiple TMC2209
#   chips are connected to the same UART pin. The default is zero.
#uart_address: 3
#   Set the given register during the configuration of the TMC2209
#   chip. This may be used to set custom motor parameters. The
#   defaults for each parameter are next to the parameter name in the
#   above list.
#driver_MULTISTEP_FILT: true
#driver_IHOLDDELAY: 8
#driver_TPOWERDOWN: 20
#driver_TBL: 2
#driver_TOFF: 3
#driver_HEND: 0
#driver_HSTRT: 5
#driver_PWM_AUTOGRAD: true
#driver_PWM_AUTOSCALE: true
#driver_PWM_LIM: 12
#driver_PWM_REG: 8
#driver_PWM_FREQ: 1
#driver_PWM_GRAD: 14
#driver_PWM_OFS: 36

[stepper_z]
step_pin: PB6
dir_pin: !PB5
enable_pin: !PC3
microsteps: 16
rotation_distance: 8
#endstop_pin: !PA15
#endstop_pin: tmc2209_stepper_z:virtual_endstop
endstop_pin: probe:z_virtual_endstop
position_max: 225
position_min: -4

[tmc2209 stepper_z]
uart_pin: PB14
run_current: 0.7
sense_resistor: 0.150
stealthchop_threshold: 0
#driver_SGTHRS: 0
#tx_pin:
#select_pins:
#   The micro-controller pin attached to the DIAG line of the TMC2209
#   chip. The pin is normally prefaced with "^" to enable a pullup.
#   Setting this creates a "tmc2209_stepper_x:virtual_endstop" virtual
#   pin which may be used as the stepper's endstop_pin. Doing this
#   enables "sensorless homing". (Be sure to also set driver_SGTHRS to
#   an appropriate sensitivity value.) The default is to not enable
#   sensorless homing.
#diag_pin: ^P
#   If true, enable step interpolation (the driver will internally
#   step at a rate of 256 micro-steps). This interpolation does
#   introduce a small systemic positional deviation - see
#   TMC_Drivers.md for details. The default is True.
interpolate: false
#   The amount of current (in amps RMS) to configure the driver to use
#   when the stepper is not moving. Setting a hold_current is not
#   recommended (see TMC_Drivers.md for details). The default is to
#   not reduce the current.
#hold_current: 0.5
#   The address of the TMC2209 chip for UART messages (an integer
#   between 0 and 3). This is typically used when multiple TMC2209
#   chips are connected to the same UART pin. The default is zero.
#uart_address:
#   Set the given register during the configuration of the TMC2209
#   chip. This may be used to set custom motor parameters. The
#   defaults for each parameter are next to the parameter name in the
#   above list.
#driver_MULTISTEP_FILT: true
#driver_IHOLDDELAY: 8
#driver_TPOWERDOWN: 20
#driver_TBL: 2
#driver_TOFF: 3
#driver_HEND: 0
#driver_HSTRT: 5
#driver_PWM_AUTOGRAD: true
#driver_PWM_AUTOSCALE: true
#driver_PWM_LIM: 12
#driver_PWM_REG: 8
#driver_PWM_FREQ: 1
#driver_PWM_GRAD: 14
#driver_PWM_OFS: 36

[extruder]
max_extrude_only_distance: 1000
max_extrude_cross_section: 80
pressure_advance: 0.195
step_pin: PB4
dir_pin: PB3
enable_pin: !PC3
microsteps: 16
gear_ratio: 7:2
rotation_distance: 26.832
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PA1
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC5
control: pid
pid_kp: 23.641
pid_ki: 1.095
pid_kd: 127.664
min_temp: 0
max_temp: 260

#NC-NO R89-0R(E_PDN)
#[tmc2209 extruder]
#uart_pin: PB15
#run_current: 0.6
#sense_resistor: 0.150
#stealthchop_threshold: 0
#driver_SGTHRS: 0
#tx_pin:
#select_pins:
#   The micro-controller pin attached to the DIAG line of the TMC2209
#   chip. The pin is normally prefaced with "^" to enable a pullup.
#   Setting this creates a "tmc2209_stepper_x:virtual_endstop" virtual
#   pin which may be used as the stepper's endstop_pin. Doing this
#   enables "sensorless homing". (Be sure to also set driver_SGTHRS to
#   an appropriate sensitivity value.) The default is to not enable
#   sensorless homing.
#diag_pin: ^P
#   If true, enable step interpolation (the driver will internally
#   step at a rate of 256 micro-steps). This interpolation does
#   introduce a small systemic positional deviation - see
#   TMC_Drivers.md for details. The default is True.
#interpolate: false
#   The amount of current (in amps RMS) to configure the driver to use
#   when the stepper is not moving. Setting a hold_current is not
#   recommended (see TMC_Drivers.md for details). The default is to
#   not reduce the current.
#hold_current: 0.5
#   The address of the TMC2209 chip for UART messages (an integer
#   between 0 and 3). This is typically used when multiple TMC2209
#   chips are connected to the same UART pin. The default is zero.
#uart_address: 3
#   Set the given register during the configuration of the TMC2209
#   chip. This may be used to set custom motor parameters. The
#   defaults for each parameter are next to the parameter name in the
#   above list.
#driver_MULTISTEP_FILT: true
#driver_IHOLDDELAY: 8
#driver_TPOWERDOWN: 20
#driver_TBL: 2
#driver_TOFF: 3
#driver_HEND: 0
#driver_HSTRT: 5
#driver_PWM_AUTOGRAD: true
#driver_PWM_AUTOSCALE: true
#driver_PWM_LIM: 12
#driver_PWM_REG: 8
#driver_PWM_FREQ: 1
#driver_PWM_GRAD: 14
#driver_PWM_OFS: 36

[heater_bed]
heater_pin: PB2
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC4
control: pid
pid_kp: 66.669
pid_ki: 0.795
pid_kd: 1397.547
min_temp: 0
max_temp: 110

[heater_fan nozzle_fan]
pin: PC1
max_power: 1.0
shutdown_speed : 0
cycle_time: 0.010
hardware_pwm: false
kick_start_time: 0.100
off_below: 0.0
heater:extruder
heater_temp : 60
fan_speed : 1.0

#[output_pin fan0]
[fan]
pin: PA0
#pwm: true
cycle_time: 0.01
hardware_pwm: false
#value: 0.00
#scale: 255
#shutdown_value: 0.0

[bltouch]
sensor_pin: ^PC14       #signal check port ^stand for pull up
control_pin: PC13       #singal control prot
x_offset: -25.0
y_offset: -15.0
z_offset: 2.125
speed: 3.0
lift_speed: 20
stow_on_each_sample: false #high speed for bltoch
samples: 2
#sample_retract_dist:
#samples_tolerance:
#samples_tolerance_retries:
samples_result: average #median #average
probe_with_touch_mode: true

[bed_mesh]
speed: 200
mesh_min: 10, 10         #need to handle head distance with bl_touch
mesh_max: 200, 200       #max probe range
probe_count: 4,4
fade_start: 0.4
fade_end: 0.6
fade_target: 0
algorithm: bicubic

#[temperature_sensor mcu_temp]
#sensor_type: temperature_mcu
#min_temp: 0
#max_temp: 100

#[neopixel my_neopixel]
#pin: PC0
#   The number of Neopixel chips that are "daisy chained" to the
#   provided pin. The default is 1 (which indicates only a single
#   Neopixel is connected to the pin).
#chain_count:
#   Set the pixel order required by the LED hardware (using a string
#   containing the letters R, G, B, W with W optional). Alternatively,
#   this may be a comma separated list of pixel orders - one for each
#   LED in the chain. The default is GRB.
#color_order: GRB
#   Sets the initial LED color. Each value should be between 0.0 and
#   1.0. The default for each color is 0.
#initial_RED: 0.0
#initial_GREEN: 0.0
#initial_BLUE: 0.0
#initial_WHITE: 0.0

[safe_z_home]
home_xy_position: 110, 110
speed: 75
z_hop: 10
z_hop_speed: 5

#[bed_screws]
#screw1: 20, 29
#screw2: 195, 29
#screw3: 195, 198
#screw4: 20, 198

#[filament_switch_sensor e0_sensor]
#switch_pin: !PC15
#pause_on_runout: true
#runout_gcode: PAUSE

# Before printing the PROBE_CALIBRATE command needs to be issued
# to run the probe calibration procedure, described at
# docs/Probe_Calibrate.md, to find the correct z_offset.
#[probe]
#pin: PC14
#x_offset: 0.0
#y_offset: 0.0
#z_offset: 1.50
#speed: 2.0
#samples: 5

[pause_resume]
recover_velocity: 25

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default75]
#*# version = 1
#*# points =
#*# 	  -0.127500, -0.017500, -0.015000, -0.127500
#*# 	  -0.043750, 0.018750, 0.013750, -0.112500
#*# 	  0.065000, 0.071250, 0.023750, -0.076250
#*# 	  -0.022500, -0.011250, -0.003750, -0.058750
#*# x_count = 4
#*# y_count = 4
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 10.0
#*# max_x = 199.99
#*# min_y = 10.0
#*# max_y = 199.99
